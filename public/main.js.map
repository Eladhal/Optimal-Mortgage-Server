{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Directives/number-validator.directive.ts","webpack:///./src/app/Directives/percentage-validator.directive.ts","webpack:///./src/app/Directives/property-validator.directive.ts","webpack:///./src/app/Directives/select-input.directive.ts","webpack:///./src/app/Directives/sum-validator.directive.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bottom/bottom.component.css","webpack:///./src/app/bottom/bottom.component.html","webpack:///./src/app/bottom/bottom.component.ts","webpack:///./src/app/classes/mortgagePlane.ts","webpack:///./src/app/components/data-form/data-form.component.css","webpack:///./src/app/components/data-form/data-form.component.html","webpack:///./src/app/components/data-form/data-form.component.ts","webpack:///./src/app/components/results/results.component.css","webpack:///./src/app/components/results/results.component.html","webpack:///./src/app/components/results/results.component.ts","webpack:///./src/app/main-title/main-title.component.css","webpack:///./src/app/main-title/main-title.component.html","webpack:///./src/app/main-title/main-title.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/pipes/addCommasToNum.pipe.ts","webpack:///./src/app/services/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;ACZwC;AACiC;AAOzE;IAEI;IACA,CAAC;iCAHQ,wBAAwB;IAKjC,2CAAQ,GAAR,UAAS,OAAwB;QAC7B,IAAM,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC;QACnC,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC;YACvB,IAAM,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC3C,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrB,MAAM,CAAC,EAAC,SAAS,EAAE,uBAAuB,EAAC,CAAC;YAChD,CAAC;QACL,CAAC;IAEL,CAAC;IAdQ,wBAAwB;QALpC,+DAAS,CAAC;YACP,QAAQ,EAAE,sBAAsB;YAChC,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,0BAAwB,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;SAE5F,CAAC;;OACW,wBAAwB,CAgBpC;IAAD,+BAAC;;CAAA;AAhBoC;;;;;;;;;;;;;;;;;;;;;;;;;;ACRG;AACiC;AAMzE;IAEI;IACA,CAAC;qCAHQ,4BAA4B;IAKrC,+CAAQ,GAAR,UAAS,OAAwB;QAC7B,IAAM,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC;QACnC,EAAE,CAAC,CAAC,YAAY,GAAG,CAAC,IAAI,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,EAAC,gBAAgB,EAAE,wCAAwC,EAAC,CAAC;QACxE,CAAC;IACL,CAAC;IAVQ,4BAA4B;QAJxC,+DAAS,CAAC;YACP,QAAQ,EAAE,0BAA0B;YACpC,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,8BAA4B,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;SAChG,CAAC;;OACW,4BAA4B,CAYxC;IAAD,mCAAC;;CAAA;AAZwC;;;;;;;;;;;;;;;;;;;;;;;;;;ACPM;AAC0B;AAOzE;IAII;IACA,CAAC;mCALQ,0BAA0B;IAOnC,6CAAQ,GAAR,UAAS,OAAwB;QAC7B,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;YACzB,IAAM,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC5C,IAAM,aAAa,GAAG,CAAC,GAAG,CAAC;YAC3B,EAAE,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBAClC,MAAM,CAAC,EAAC,WAAW,EAAE,iDAAiD,EAAC,CAAC;YAC5E,CAAC;QACL,CAAC;IACL,CAAC;IAbQ;QAAR,2DAAK,EAAE;;kEAAoB;IAFnB,0BAA0B;QALtC,+DAAS,CAAC;YACP,QAAQ,EAAE,wBAAwB;YAClC,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,4BAA0B,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;SAE9F,CAAC;;OACW,0BAA0B,CAgBtC;IAAD,iCAAC;;CAAA;AAhBsC;;;;;;;;;;;;;;;;;;;;;;;;;ACR4B;AAKnE;IAGI,8BAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC1C,CAAC;IAED,uCAAQ,GAAR;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC1C,CAAC;IACL,CAAC;IATQ;QAAR,2DAAK,EAAE;;4DAAqB;IADpB,oBAAoB;QAHhC,+DAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;SAC/B,CAAC;yCAIkC,wDAAU;OAHjC,oBAAoB,CAYhC;IAAD,2BAAC;CAAA;AAZgC;;;;;;;;;;;;;;;;;;;;;;;;;;ACLc;AAC0B;AASzE;IAMI;IACA,CAAC;8BAPQ,qBAAqB;IAS9B,wCAAQ,GAAR,UAAS,OAAwB;QAC7B,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;YACzB,IAAM,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC5C,IAAM,YAAY,GAAG,CAAC,GAAG,CAAC;YAC1B,IAAI,GAAG,GAAG,CAAC,CAAC;YAEZ,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;gBACjC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YACnC,CAAC;YAED,GAAG,GAAG,GAAG,GAAG,YAAY,CAAC;YACzB,EAAE,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,EAAC,SAAS,EAAE,0CAA0C,EAAC,CAAC;YACnE,CAAC;QACL,CAAC;IACL,CAAC;IAtBQ;QAAR,2DAAK,EAAE;;yDAAwB;IACvB;QAAR,2DAAK,EAAE;;uDAAc;IACb;QAAR,2DAAK,EAAE;;uDAAc;IAJb,qBAAqB;QALjC,+DAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;YAC7B,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,uBAAqB,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;SAEzF,CAAC;;OACW,qBAAqB,CAyBjC;IAAD,4BAAC;;CAAA;AAzBiC;;;;;;;;;;;;ACVlC,mB;;;;;;;;;;;ACAA,kH;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP+B;AACjB;AACI;AACW;AACA;AAGT;AACa;AACA;AACW;AACQ;AACY;AAChB;AACU;AACN;AACU;AACb;AAuB1E;IAAA;IACA,CAAC;IADY,SAAS;QArBrB,8DAAQ,CAAC;YACN,YAAY,EAAE;gBACV,2DAAY;gBACZ,wEAAe;gBACf,wEAAe;gBACf,mFAAkB;gBAClB,2FAAiB;gBACjB,wGAA4B;gBAC5B,wFAAoB;gBACpB,oEAAS;gBACT,gGAAwB;gBACxB,0FAAqB;gBACrB,oGAA0B;gBAC1B,uFAAgB;aACnB;YACD,OAAO,EAAE;gBACL,uEAAa,EAAE,0DAAW,EAAE,qEAAgB;aAC/C;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC5B,CAAC;OACW,SAAS,CACrB;IAAD,gBAAC;CAAA;AADqB;;;;;;;;;;;;ACxCtB,mB;;;;;;;;;;;ACAA,+C;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;;;;;;ACP5B;AAAA;IAAA;QAII,UAAK,GAAmB,EAAE,CAAC;IAC/B,CAAC;IAAD,mBAAC;AAAD,CAAC;;AAGD;IAAA;IAMA,CAAC;IAAD,mBAAC;AAAD,CAAC;;AAEM,IAAM,KAAK,GAAa;IAC3B,OAAO;IACP,gBAAgB;IAChB,aAAa;IACb,gBAAgB;IAChB,aAAa;CAChB;AAEM,IAAM,MAAM,GAAa;IAC5B,QAAQ;IACR,SAAS;IACT,SAAS;IACT,SAAS;CACZ;;;;;;;;;;;;AC7BD,gCAAgC,oBAAoB,6BAA6B,oBAAoB,GAAG,eAAe,oBAAoB,0BAA0B,yBAAyB,yBAAyB,oBAAoB,oBAAoB,0BAA0B,yBAAyB,wBAAwB,GAAG,WAAW,mBAAmB,+CAA+C,yBAAyB,wBAAwB,yBAAyB,0BAA0B,0BAA0B,yBAAyB,GAAG,eAAe,mBAAmB,+CAA+C,yBAAyB,uBAAuB,wBAAwB,yBAAyB,0BAA0B,0BAA0B,yBAAyB,GAAG,sBAAsB,kCAAkC,wCAAwC,kCAAkC,wCAAwC,8BAA8B,yBAAyB,kBAAkB,gDAAgD,kCAAkC,mCAAmC,GAAG,2BAA2B,kCAAkC,wCAAwC,kCAAkC,wCAAwC,8BAA8B,yBAAyB,kBAAkB,gDAAgD,kBAAkB,GAAG,sBAAsB,6BAA6B,wCAAwC,kCAAkC,wCAAwC,8BAA8B,yBAAyB,kBAAkB,gDAAgD,uBAAuB,kCAAkC,mCAAmC,qCAAqC,sCAAsC,GAAG,iBAAiB,qCAAqC,sCAAsC,GAAG,qBAAqB,oBAAoB,6BAA6B,GAAG,kBAAkB,qBAAqB,GAAG,iBAAiB,kBAAkB,uBAAuB,mBAAmB,sBAAsB,GAAG,WAAW,0BAA0B,GAAG,YAAY,0BAA0B,GAAG,mBAAmB,kBAAkB,yBAAyB,qBAAqB,iBAAiB,GAAG,cAAc,8BAA8B,0BAA0B,kBAAkB,yBAAyB,GAAG,kBAAkB,kBAAkB,uBAAuB,mBAAmB,GAAG,aAAa,uBAAuB,yBAAyB,GAAG,cAAc,gBAAgB,GAAG,QAAQ,qBAAqB,kBAAkB,gBAAgB,iCAAiC,oBAAoB,iBAAiB,GAAG,YAAY,mBAAmB,kBAAkB,GAAG,S;;;;;;;;;;;ACAx3F,i5HAAi5H,wiBAAwiB,GAAG,8PAA8P,MAAM,ieAAie,GAAG,4uCAA4uC,GAAG,0JAA0J,GAAG,sgBAAsgB,GAAG,8jFAA8jF,2DAA2D,KAAK,KAAK,cAAc,kCAAkC,gBAAgB,0CAA0C,gBAAgB,+HAA+H,YAAY,qZ;;;;;;;;;;;;;;;;;;;;;;;;;;ACAj5T;AACS;AACA;AACP;AACC;AACK;AAQxD;IAOI,2BAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QANrC,WAAM,GAAa,4DAAK,CAAC;QACzB,WAAM,GAAa,6DAAM,CAAC;QAG1B,eAAU,GAAU,aAAa,CAAC;QAG9B,IAAI,CAAC,YAAY,GAAG,IAAI,mEAAY,EAAE,CAAC;IAC3C,CAAC;IAED,oCAAQ,GAAR;IACA,CAAC;IAED,mCAAO,GAAP;QAAA,iBAKC;QAJG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;YACtD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,eAAe,GAAG,MAAM,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wCAAY,GAAZ,UAAa,GAAW;QACpB,IAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAClC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED,yCAAa,GAAb;QACI,IAAM,IAAI,GAAG,IAAI,mEAAY,EAAE,CAAC;QAChC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QAC7C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,yCAAa,GAAb,UAAc,IAAkB;QAC5B,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,aAAG,IAAI,UAAG,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,EAAlB,CAAkB,CAAC,CAAC;QAC1E,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC;IACL,CAAC;IArCQ,iBAAiB;QAL7B,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;;;SAG5B,CAAC;yCAQ4B,kEAAW;OAP5B,iBAAiB,CAsC7B;IAAD,wBAAC;CAAA;AAtC6B;;;;;;;;;;;;ACb9B,gCAAgC,oBAAoB,6BAA6B,oBAAoB,GAAG,eAAe,oBAAoB,0BAA0B,yBAAyB,yBAAyB,oBAAoB,oBAAoB,0BAA0B,yBAAyB,wBAAwB,GAAG,WAAW,mBAAmB,+CAA+C,yBAAyB,wBAAwB,yBAAyB,0BAA0B,0BAA0B,yBAAyB,GAAG,eAAe,mBAAmB,+CAA+C,yBAAyB,uBAAuB,wBAAwB,yBAAyB,0BAA0B,0BAA0B,yBAAyB,GAAG,sBAAsB,kCAAkC,wCAAwC,kCAAkC,wCAAwC,8BAA8B,yBAAyB,kBAAkB,gDAAgD,kCAAkC,mCAAmC,GAAG,2BAA2B,kCAAkC,wCAAwC,kCAAkC,wCAAwC,8BAA8B,yBAAyB,kBAAkB,gDAAgD,kBAAkB,GAAG,qBAAqB,oBAAoB,6BAA6B,GAAG,kBAAkB,qBAAqB,GAAG,iBAAiB,kBAAkB,uBAAuB,mBAAmB,sBAAsB,GAAG,WAAW,0BAA0B,GAAG,YAAY,0BAA0B,GAAG,mBAAmB,kBAAkB,yBAAyB,qBAAqB,iBAAiB,GAAG,cAAc,8BAA8B,0BAA0B,kBAAkB,yBAAyB,GAAG,kBAAkB,kBAAkB,uBAAuB,mBAAmB,GAAG,aAAa,uBAAuB,yBAAyB,GAAG,W;;;;;;;;;;;ACApnE,2OAA2O,cAAc,aAAa,gBAAgB,yD;;;;;;;;;;;;;;;;;;;;;;;;ACA/N;AAOvD;IAII;IACA,CAAC;IAED,mCAAQ,GAAR;IACA,CAAC;IANQ;QAAR,2DAAK,EAAE;;kDAAW;IAFV,gBAAgB;QAL5B,+DAAS,CAAC;YACP,QAAQ,EAAE,aAAa;;;SAG1B,CAAC;;OACW,gBAAgB,CAU5B;IAAD,uBAAC;CAAA;AAV4B;;;;;;;;;;;;ACP7B,yBAAyB,oBAAoB,oBAAoB,0BAA0B,GAAG,eAAe,iBAAiB,0BAA0B,uBAAuB,GAAG,cAAc,iBAAiB,8DAA8D,mBAAmB,GAAG,YAAY,wBAAwB,GAAG,QAAQ,kBAAkB,GAAG,C;;;;;;;;;;;ACAzW,uU;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACP/B,uBAAuB,mBAAmB,8BAA8B,GAAG,C;;;;;;;;;;;ACA3E,8C;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;;;;;;;;;;;ACPsB;AAIlD;IAAA;IASA,CAAC;IARG,6BAAS,GAAT,UAAU,GAAW;QACjB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACN,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC,CAAC;QAClE,CAAC;QACD,IAAI,CAAC,CAAC;YACF,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;IACL,CAAC;IARQ,SAAS;QADrB,0DAAI,CAAC,EAAC,IAAI,EAAE,WAAW,EAAC,CAAC;OACb,SAAS,CASrB;IAAD,gBAAC;CAAA;AATqB;;;;;;;;;;;;;;;;;;;;;;;;;;ACJmB;AAEO;AAMhD;IAEI,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,iCAAW,GAAX,UAAY,IAAkB;QAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAe,mBAAmB,EAAE,IAAI,CAAC,CAAC;IACnE,CAAC;IAPQ,WAAW;QAHvB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;yCAG4B,+DAAU;OAF3B,WAAW,CAQvB;IAAD,kBAAC;CAAA;AARuB;;;;;;;;;;;;;;ACRxB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Directive} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, Validator} from '@angular/forms';\n\n@Directive({\n    selector: '[appNumberValidator]',\n    providers: [{provide: NG_VALIDATORS, useExisting: NumberValidatorDirective, multi: true}]\n\n})\nexport class NumberValidatorDirective implements Validator {\n\n    constructor() {\n    }\n\n    validate(control: AbstractControl) {\n        const elementValue = control.value;\n        if (elementValue != null) {\n            const str = elementValue.replace(/,/g, '');\n            if (isNaN(Number(str))) {\n                return {'cus_num': 'Need to enter numbers'};\n            }\n        }\n\n    }\n\n}","import {Directive} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, Validator} from '@angular/forms';\n\n@Directive({\n    selector: '[appPercentageValidator]',\n    providers: [{provide: NG_VALIDATORS, useExisting: PercentageValidatorDirective, multi: true}]\n})\nexport class PercentageValidatorDirective implements Validator {\n\n    constructor() {\n    }\n\n    validate(control: AbstractControl) {\n        const elementValue = control.value;\n        if (elementValue < 0 || elementValue > 100) {\n            return {'cus_percentage': 'Need to enter numbers between 0 to 100'};\n        }\n    }\n\n}\n","import {Directive, Input} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, Validator} from '@angular/forms';\n\n@Directive({\n    selector: '[appPropertyValidator]',\n    providers: [{provide: NG_VALIDATORS, useExisting: PropertyValidatorDirective, multi: true}]\n\n})\nexport class PropertyValidatorDirective implements Validator {\n\n    @Input() mortgValue: number;\n\n    constructor() {\n    }\n\n    validate(control: AbstractControl) {\n        if (control.value !== null) {\n            const str = control.value.replace(/,/g, '');\n            const propertyValue = +str;\n            if (propertyValue < this.mortgValue) {\n                return {'cus_value': 'value of mortgage is bigger than property value'};\n            }\n        }\n    }\n}\n","import {Directive, ElementRef, Input, OnInit} from '@angular/core';\n\n@Directive({\n    selector: '[appSelectInput]'\n})\nexport class SelectInputDirective implements OnInit {\n    @Input() selectFlag: boolean;\n\n    constructor(private elementRef: ElementRef) {\n    }\n\n    ngOnInit() {\n        if (this.selectFlag === true) {\n            this.elementRef.nativeElement.focus();\n        }\n    }\n\n}\n","import {Directive, Input} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, Validator} from '@angular/forms';\nimport {MortgagePlan} from '../classes/mortgagePlane';\n\n\n@Directive({\n    selector: '[appSumValidator]',\n    providers: [{provide: NG_VALIDATORS, useExisting: SumValidatorDirective, multi: true}]\n\n})\nexport class SumValidatorDirective implements Validator {\n\n    @Input() mPlans: MortgagePlan[];\n    @Input() mSum: number;\n    @Input() indx: number;\n\n    constructor() {\n    }\n\n    validate(control: AbstractControl) {\n        if (control.value !== null) {\n            const str = control.value.replace(/,/g, '');\n            const elementValue = +str;\n            let sum = 0;\n\n            for (let i = 0; i < this.indx; i++) {\n                sum = sum + this.mPlans[i].sum;\n            }\n\n            sum = sum + elementValue;\n            if (sum > this.mSum) {\n                return {'cus_sum': 'sum of plans is bigger than mortgage sum'};\n            }\n        }\n    }\n}","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<app-main-title></app-main-title>\\n<app-data-form></app-data-form>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AddCommas} from './pipes/addCommasToNum.pipe';\n\n\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './navbar/navbar.component';\nimport {BottomComponent} from './bottom/bottom.component';\nimport {MainTitleComponent} from './main-title/main-title.component';\nimport {DataFormComponent} from './components/data-form/data-form.component';\nimport {PercentageValidatorDirective} from './Directives/percentage-validator.directive';\nimport {SelectInputDirective} from './Directives/select-input.directive';\nimport { NumberValidatorDirective } from './Directives/number-validator.directive';\nimport { SumValidatorDirective } from './Directives/sum-validator.directive';\nimport { PropertyValidatorDirective } from './Directives/property-validator.directive';\nimport { ResultsComponent } from './components/results/results.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        NavbarComponent,\n        BottomComponent,\n        MainTitleComponent,\n        DataFormComponent,\n        PercentageValidatorDirective,\n        SelectInputDirective,\n        AddCommas,\n        NumberValidatorDirective,\n        SumValidatorDirective,\n        PropertyValidatorDirective,\n        ResultsComponent\n    ],\n    imports: [\n        BrowserModule, FormsModule, HttpClientModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  bottom works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bottom',\n  templateUrl: './bottom.component.html',\n  styleUrls: ['./bottom.component.css']\n})\nexport class BottomComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class MortgageData {\n    mortgageSum: number;\n    propValue: number;\n    netIncome: number;\n    plans: MortgagePlan[] = [];\n}\n\n\nexport class MortgagePlan {\n    id: number;\n    plan: string;\n    sum: number;\n    period: string;\n    interest: number;\n}\n\nexport const Plans: string[] = [\n    'פריים' ,\n    'קבועה לא צמודה' ,\n    'משתנה צמודה' ,\n    'משתנה לא צמודה' ,\n    'קבועה צמודה'\n]\n\nexport const Period: string[] = [\n    '0 - 10' ,\n    '11 - 15' ,\n    '16 - 20' ,\n    '21 - 30' ,\n]","module.exports = \"\\n.container {\\n    display: flex;\\n    flex-direction: column;\\n    width: 1000px;\\n}\\n\\n.mainData {\\n    display: flex;\\n    flex-direction: row;\\n    margin-right: auto;\\n    margin-left: auto;}\\n\\n.mainDataPlans {\\n    display: flex;\\n    flex-direction: row;\\n    margin-right: auto;\\n    margin-left: auto;\\n}\\n\\n.data {\\n    width: 550px;\\n    box-shadow: 2px 2px 20px hsl(0, 0%, 85%);\\n    margin-right: 10px;\\n    padding-top: 20px;\\n    padding-left: 20px;\\n    padding-right: 15px;\\n    padding-bottom: 5px;\\n    border-radius: 5px;\\n}\\n\\n.dataPlans{\\n    width: 550px;\\n    box-shadow: 2px 2px 20px hsl(0, 0%, 85%);\\n    margin-right: 10px;\\n    margin-top: 15px;\\n    padding-top: 20px;\\n    padding-left: 20px;\\n    padding-right: 15px;\\n    padding-bottom: 5px;\\n    border-radius: 5px;\\n}\\n\\n.sideTilteParent {\\n    background-color: lightblue;\\n    -webkit-writing-mode: vertical-rl;\\n        -ms-writing-mode: tb-rl;\\n            writing-mode: vertical-rl;\\n    text-orientation: mixed;\\n    text-align: center;\\n    width: 40px;\\n    box-shadow: 1px 1.5px 5px hsl(0, 0%, 85%);\\n    border-top-left-radius: 5px;\\n    border-top-right-radius: 5px;\\n}\\n\\n.sideTilteParentPlans {\\n    background-color: lightblue;\\n    -webkit-writing-mode: vertical-rl;\\n        -ms-writing-mode: tb-rl;\\n            writing-mode: vertical-rl;\\n    text-orientation: mixed;\\n    text-align: center;\\n    width: 40px;\\n    box-shadow: 1px 1.5px 6px hsl(0, 0%, 85%);\\n    margin: 0px;\\n}\\n\\n.sideTilteResults{\\n    background-color: blue;\\n    -webkit-writing-mode: vertical-rl;\\n        -ms-writing-mode: tb-rl;\\n            writing-mode: vertical-rl;\\n    text-orientation: mixed;\\n    text-align: center;\\n    width: 40px;\\n    box-shadow: 1px 1.5px 6px hsl(0, 0%, 85%);\\n    margin-top: 15px;\\n    border-top-left-radius: 5px;\\n    border-top-right-radius: 5px;\\n    border-bottom-left-radius: 5px;\\n    border-bottom-right-radius: 5px;\\n}\\n\\n.bottomRound{\\n    border-bottom-left-radius: 5px;\\n    border-bottom-right-radius: 5px;\\n}\\n\\n.innerContainer {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\nlabel, input {\\n    display: block;\\n}\\n\\n.btnAddPlan {\\n    float: left;\\n    margin-top: 20px;\\n    width: 120px;\\n    margin-left: 2%;\\n}\\n\\ninput {\\n    margin-bottom: 10px;\\n}\\n\\nselect {\\n    margin-bottom: 10px;\\n}\\n\\n.messageError {\\n    width: 100%;\\n    margin-top: .25rem;\\n    font-size: 80%;\\n    color: red;\\n}\\n\\n.buttons {\\n    -ms-grid-row-align: end;\\n        align-self: end;\\n    width: 100%;\\n    margin-bottom: 8px;\\n}\\n\\n.btnContinue {\\n    float: left;\\n    margin-top: 20px;\\n    width: 120px;\\n}\\n\\n.btnSub {\\n    margin-top: 15px;\\n    text-align: center;\\n}\\n\\n.resTitle{\\n  color: blue;\\n}\\n\\nhr {\\n    display: block;\\n    height: 1px;\\n    border: 0;\\n    border-top: 1px solid #ccc;\\n    margin: 1em 0;\\n    padding: 0;\\n}\\n\\n.imgRes{\\n    height: 25px;\\n    width: 25px;\\n}\\n\\n\\n\\n\"","module.exports = \"<form #form=\\\"ngForm\\\" (ngSubmit)=\\\"logForm()\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"mainData\\\">\\n            <div class=\\\"sideTilteParent\\\">\\n                <div>שלב 1 פרטים כללים</div>\\n            </div>\\n            <div class=\\\"data\\\">\\n                <div class=\\\"innerContainer\\\">\\n                    <div class=\\\"inputs\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"Mortgage\\\">סכום משכנתא</label>\\n                            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"MortgageSum\\\" id=\\\"Mortgage\\\" ngModel [value]=\\\"mortgageData.mortgageSum | addCommas\\\"\\n                                (input)=\\\"mortgageData.mortgageSum=ConvertToNum($event.target.value)\\\" #MortgageSum=\\\"ngModel\\\" appNumberValidator\\n                                required>\\n                            <div class=\\\"messageError\\\" *ngIf=\\\"MortgageSum.invalid && (MortgageSum.dirty || MortgageSum.touched)\\\">\\n                                <div *ngIf=\\\"MortgageSum?.errors.required\\\">\\n                                    יש להזין סכום משכנתא.\\n                                </div>\\n                                <div *ngIf=\\\"MortgageSum?.errors.cus_num\\\">\\n                                    יש להזין מספרים בלבד.\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"Prop\\\">שווי נכס</label>\\n                            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"PropValue\\\" ngModel [value]=\\\"mortgageData.propValue | addCommas\\\" (input)=\\\"mortgageData.propValue=ConvertToNum($event.target.value)\\\"\\n                                appPropertyValidator [mortgValue]=\\\"mortgageData.mortgageSum\\\" #PropValue=\\\"ngModel\\\" id=\\\"Prop\\\" appNumberValidator\\n                                required>\\n                            <div class=\\\"messageError\\\" *ngIf=\\\"PropValue.invalid && (PropValue.dirty || PropValue.touched)\\\">\\n                                <div *ngIf=\\\"PropValue?.errors.required\\\">\\n                                    יש להזין שווי נכס.\\n                                </div>\\n                                <div *ngIf=\\\"PropValue?.errors.cus_num\\\">\\n                                    יש להזין מספרים בלבד.\\n                                </div>\\n                                <div *ngIf=\\\"PropValue?.errors.cus_value\\\">\\n                                    ערך הנכס לא יכול להיות נמוך יותר מערך המשכנתא.\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"Net\\\">הכנסה נטו</label>\\n                            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"NetIncome\\\" ngModel [value]=\\\"mortgageData.netIncome | addCommas\\\" (input)=\\\"mortgageData.netIncome=ConvertToNum($event.target.value)\\\"\\n                                #NetIncome=\\\"ngModel\\\" id=\\\"Net\\\" appNumberValidator>\\n                            <div class=\\\"messageError\\\" *ngIf=\\\"NetIncome.invalid && (NetIncome.dirty || NetIncome.touched)\\\">\\n                                <div *ngIf=\\\"NetIncome?.errors.cus_num\\\">\\n                                    יש להזין מספרים בלבד.\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"buttons\\\">\\n                        <button type=\\\"button\\\" class=\\\"btnContinue btn btn-success btn-sm\\\" [disabled]=\\\"(MortgageSum.invalid || PropValue.invalid || NetIncome.invalid)\\\"\\n                            (click)=\\\"btnAddNewPlan()\\\">המשך\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"mainDataPlans\\\" *ngFor=\\\"let mortgagePlan of mortgageData.plans; let i=index\\\">\\n            <div class=\\\"sideTilteParentPlans\\\" [ngClass]=\\\"i===mortgageData.plans.length-1 ? 'bottomRound':''\\\">\\n                <div *ngIf=\\\"i===0\\\" class=\\\"sideTilte\\\">שלב 2 הרכב משכנתא</div>\\n            </div>\\n            <div class=\\\"dataPlans\\\">\\n                <div class=\\\"innerContainer\\\">\\n                    <div class=\\\"inputs\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label>בחר מסלול</label>\\n                            <select class=\\\"form-control\\\" name=\\\"mortgagePlan_{{i}}\\\" [(ngModel)]=\\\"mortgagePlan.plan\\\" #Plan=\\\"ngModel\\\" appSelectInput [selectFlag]=\\\"i === mortgageData.plans.length-1\\\"\\n                                required>\\n                                <option *ngFor=\\\"let plan of MPlans\\\" [value]=\\\"plan\\\">{{plan}}</option>\\n                            </select>\\n                            <div class=\\\"messageError\\\" *ngIf=\\\"Plan.invalid && (Plan.dirty || Plan.touched)\\\">\\n                                יש צורך להזין מסלול.\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>סכום מסלול</label>\\n                            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"planSum_{{i}}\\\" ngModel [value]=\\\"mortgagePlan.sum | addCommas\\\" (input)=\\\"mortgagePlan.sum=ConvertToNum($event.target.value)\\\"\\n                                appSumValidator [indx]=\\\"i\\\" [mPlans]=\\\"mortgageData.plans\\\" [mSum]=\\\"mortgageData.mortgageSum\\\" #MPlanSum=\\\"ngModel\\\"\\n                                appNumberValidator required>\\n                            <div class=\\\"messageError\\\" *ngIf=\\\"MPlanSum.invalid && (MPlanSum.dirty || MPlanSum.touched)\\\">\\n                                <div *ngIf=\\\"MPlanSum?.errors.required\\\">\\n                                    יש להזין סכום מסלול.\\n                                </div>\\n                                <div *ngIf=\\\"MPlanSum?.errors.cus_num\\\">\\n                                    יש להזין מספרים בלבד.\\n                                </div>\\n                                <div *ngIf=\\\"MPlanSum?.errors.cus_sum\\\">\\n                                    הסכום הכולל של המסלולים גדול יותר מסכום המשכנתא.\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>תקופה בשנים</label>\\n                            <select class=\\\"form-control\\\" name=\\\"mortgagePeriod_{{i}}\\\" [(ngModel)]=\\\"mortgagePlan.period\\\" #MPeriod=\\\"ngModel\\\" required>\\n                                <option *ngFor=\\\"let p of Period\\\" [value]=\\\"p\\\">{{p}}</option>\\n                            </select>\\n                            <div class=\\\"messageError\\\" *ngIf=\\\"MPeriod.invalid && (MPeriod.dirty || MPeriod.touched)\\\">\\n                                יש צורך להזין תקופה בשנים.\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>ריבית שהתקבלה עבור המסלול הזה</label>\\n                            <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"interest_{{i}}\\\" min=\\\"0\\\" max=\\\"100\\\" [(ngModel)]=\\\"mortgagePlan.interest\\\" #MInterest=\\\"ngModel\\\"\\n                                appPercentageValidator required pattern=\\\"^[+-]?([0-9]*[.])?[0-9]+$\\\">\\n                            <div class=\\\"messageError\\\" *ngIf=\\\"MInterest.invalid && (MInterest.dirty || MInterest.touched)\\\">\\n                                <div *ngIf=\\\"MInterest?.errors.required\\\">\\n                                    יש צורך להזין ריבית.\\n                                </div>\\n                                <div *ngIf=\\\"MInterest?.errors.pattern\\\">\\n                                    ריבית צריכה לכלול מספרים בלבד.\\n                                </div>\\n                                <div *ngIf=\\\"MInterest?.errors.cus_percentage\\\">\\n                                    יש להזין מספר בין 0 ל - 100\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"buttons\\\">\\n                        <button type=\\\"button\\\" class=\\\" btnContinue btn btn-success btn-sm\\\" [disabled]=\\\"(Plan.invalid || MPlanSum.invalid || MPeriod.invalid || MInterest.invalid)\\\"\\n                            (click)=\\\"btnAddNewPlan()\\\">הוסף מסלול נוסף +\\n                        </button>\\n                        <button type=\\\"button\\\" class=\\\"btnAddPlan btnContinue btn btn-success btn-sm\\\" (click)=\\\"btnRemovePlan(mortgagePlan)\\\">הסר מסלול\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"mainDataPlans\\\" *ngIf=\\\"averageInterest\\\">\\n            <div class=\\\"sideTilteResults\\\">\\n                <div>מסקנות והמלצות</div>\\n            </div>\\n            <div class=\\\"dataPlans\\\">\\n                <div class=\\\"innerContainer\\\">\\n                    <h2 class=\\\"resTitle\\\">כל הכבוד !</h2>\\n                    <h5>נראה שההצעה שקיבלתם ???</h5>\\n                    <p>לורם איפסום דולור סיט אמט, קונסקטורר אדיפיסינג אלית להאמית קרהשק סכעיט דז מא, מנכם למטכין נשואי מנורךגולר\\n                        מונפרר סוברט לורם שבצק יהול , לכנוץ בעריר גק ליץ, ושבעגט. הועניב היושבב שערש שמחויט - שלושע ותלברו\\n                        חשלו שעותלשך וחאית נובש ערששף. זותה מנק הבקיץ אפאח דלאמת יבש, כאנה ניצאחו נמרגי שהכים תוק, הדש שנרא\\n                        התידם הכייר וק.\\n                    </p>\\n                    <hr/>\\n                    <h4><img class=\\\"imgRes\\\" src=\\\"../../../assets/summery.jpeg\\\"> סיכום מסלולים</h4>\\n                    <ul>\\n                        <li *ngFor=\\\"let result of averageInterest; let i=index\\\">\\n                            <span>מסלול {{i+1}} - {{result?.plan}} - </span><span>ריבית ממוצעת :  {{result.average}}</span>\\n                            <p>{{result?.result}}</p>\\n                        </li>\\n                    </ul>\\n                    <hr/>   \\n                    <p>המלצה : {{conclution}}</p>\\n                </div>\\n            </div>\\n        </div>\\n        <!-- <app-results [data]=\\\"averageInterest\\\" *ngIf=\\\"averageInterest\\\" class=\\\"mainDataPlans\\\"></app-results>-->\\n    </div>\\n    <div class=\\\"btnSub\\\" *ngIf=\\\"form.valid && mortgageData.plans.length >0 && !averageInterest\\\">\\n        <button class=\\\"btn btn-warning\\\" type=\\\"submit\\\">איך המשכנתא שלי</button>\\n    </div>\\n</form>\"","import {Component, OnInit} from '@angular/core';\nimport {MortgageData} from '../../classes/mortgagePlane';\nimport {MortgagePlan} from '../../classes/mortgagePlane';\nimport {Plans} from '../../classes/mortgagePlane';\nimport {Period} from '../../classes/mortgagePlane';\nimport {HttpService} from '../../services/http.service';\n\n\n@Component({\n    selector: 'app-data-form',\n    templateUrl: './data-form.component.html',\n    styleUrls: ['./data-form.component.css']\n})\nexport class DataFormComponent implements OnInit {\n    MPlans: string[] = Plans;\n    Period: string[] = Period;\n    mortgageData: MortgageData;\n    averageInterest: any;\n    conclution:string = \"משתלם לחתום\";\n\n    constructor(private http: HttpService) {\n        this.mortgageData = new MortgageData();\n    }\n\n    ngOnInit() {\n    }\n\n    logForm() {\n        this.http.addMortgage(this.mortgageData).subscribe((answer) => {\n            console.log(answer);\n            this.averageInterest = answer;\n        });\n    }\n\n    ConvertToNum(num: string): number {\n        const str = num.replace(/,/g, '');\n        return parseInt(str, 10);\n    }\n\n    btnAddNewPlan() {\n        const plan = new MortgagePlan();\n        plan.id = this.mortgageData.plans.length + 1;\n        this.mortgageData.plans.push(plan);\n    }\n\n    btnRemovePlan(plan: MortgagePlan) {\n        const indx = this.mortgageData.plans.findIndex(rec => rec.id === plan.id);\n        if (indx > -1) {\n            this.mortgageData.plans.splice(indx, 1);\n        }\n    }\n}\n","module.exports = \"\\n.container {\\n    display: flex;\\n    flex-direction: column;\\n    width: 1000px;\\n}\\n\\n.mainData {\\n    display: flex;\\n    flex-direction: row;\\n    margin-right: auto;\\n    margin-left: auto;}\\n\\n.mainDataPlans {\\n    display: flex;\\n    flex-direction: row;\\n    margin-right: auto;\\n    margin-left: auto;\\n}\\n\\n.data {\\n    width: 450px;\\n    box-shadow: 2px 2px 20px hsl(0, 0%, 85%);\\n    margin-right: 10px;\\n    padding-top: 20px;\\n    padding-left: 20px;\\n    padding-right: 15px;\\n    padding-bottom: 5px;\\n    border-radius: 5px;\\n}\\n\\n.dataPlans{\\n    width: 450px;\\n    box-shadow: 2px 2px 20px hsl(0, 0%, 85%);\\n    margin-right: 10px;\\n    margin-top: 15px;\\n    padding-top: 20px;\\n    padding-left: 20px;\\n    padding-right: 15px;\\n    padding-bottom: 5px;\\n    border-radius: 5px;\\n}\\n\\n.sideTilteParent {\\n    background-color: lightblue;\\n    -webkit-writing-mode: vertical-rl;\\n        -ms-writing-mode: tb-rl;\\n            writing-mode: vertical-rl;\\n    text-orientation: mixed;\\n    text-align: center;\\n    width: 40px;\\n    box-shadow: 1px 1.5px 5px hsl(0, 0%, 85%);\\n    border-top-left-radius: 5px;\\n    border-top-right-radius: 5px;\\n}\\n\\n.sideTilteParentPlans {\\n    background-color: lightblue;\\n    -webkit-writing-mode: vertical-rl;\\n        -ms-writing-mode: tb-rl;\\n            writing-mode: vertical-rl;\\n    text-orientation: mixed;\\n    text-align: center;\\n    width: 40px;\\n    box-shadow: 1px 1.5px 6px hsl(0, 0%, 85%);\\n    margin: 0px;\\n}\\n\\n.innerContainer {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\nlabel, input {\\n    display: block;\\n}\\n\\n.btnAddPlan {\\n    float: left;\\n    margin-top: 20px;\\n    width: 120px;\\n    margin-left: 2%;\\n}\\n\\ninput {\\n    margin-bottom: 10px;\\n}\\n\\nselect {\\n    margin-bottom: 10px;\\n}\\n\\n.messageError {\\n    width: 100%;\\n    margin-top: .25rem;\\n    font-size: 80%;\\n    color: red;\\n}\\n\\n.buttons {\\n    -ms-grid-row-align: end;\\n        align-self: end;\\n    width: 100%;\\n    margin-bottom: 8px;\\n}\\n\\n.btnContinue {\\n    float: left;\\n    margin-top: 20px;\\n    width: 120px;\\n}\\n\\n.btnSub {\\n    margin-top: 15px;\\n    text-align: center;\\n}\\n\\n\\n\\n\\n\"","module.exports = \"  <div class=\\\"sideTilteParentPlans\\\">\\n    <div>מסקנות והמלצות</div>\\n  </div>\\n  <div class=\\\"dataPlans\\\">\\n    <div class=\\\"innerContainer\\\">\\n      <ul>\\n        <li *ngFor=\\\"let result of data\\\">\\n          <p>{{result?.plan}} : </p> <p>{{result?.result}}</p>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n\"","import {Component, OnInit, Input} from '@angular/core';\n\n@Component({\n    selector: 'app-results',\n    templateUrl: './results.component.html',\n    styleUrls: ['./results.component.css']\n})\nexport class ResultsComponent implements OnInit {\n\n    @Input() data: any;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \".title{\\n    height: 250px;\\n    display: flex;\\n    flex-direction: row;\\n}\\n\\n.titleText{\\n    width: 50%;\\n    margin-right: 100px;\\n    margin-top: 30px;\\n}\\n\\n.titlePic{\\n    width: 50%;\\n    background: url('mortgage.png') no-repeat center center;\\n    height: 100%;\\n}\\n\\n.pTitle{\\n    font-weight: bold;\\n}\\n\\nh2 {\\n    color: blue;\\n}\"","module.exports = \"<div class=\\\"title\\\">\\n  <div class=\\\"titleText\\\">\\n    <h2>איך המשכנתא שלי?</h2>\\n    <p class=\\\"pTitle\\\">באנו לעשות לכם קצת סדר</p>\\n    <p>קיבלתם הצעה למשכנתא מהבנק?רוצים לדעת האם היא טובה</p>\\n    <p>או לא ביחס לאנשים דומים לכם?הגעתם למקום הנכון!</p>\\n  </div>\\n  <div class=\\\"titlePic\\\"></div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-title',\n  templateUrl: './main-title.component.html',\n  styleUrls: ['./main-title.component.css']\n})\nexport class MainTitleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".nav{\\n    height: 75px;\\n    background-color: green;\\n}\"","module.exports = \"<div class=\\\"nav\\\"></div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n\n@Pipe({name: 'addCommas'})\nexport class AddCommas implements PipeTransform {\n    transform(num: number): string {\n        if (num) {\n            return (num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','));\n        }\n        else {\n            return '';\n        }\n    }\n}\n\n\n","import {Injectable} from '@angular/core';\nimport {MortgageData} from '../classes/mortgagePlane';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    addMortgage(data: MortgageData): Observable<any> {\n        return this.http.post<MortgageData>('api/mortgage-plan', data);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}