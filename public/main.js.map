{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Directives/percentage-validator.directive.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bottom/bottom.component.css","webpack:///./src/app/bottom/bottom.component.html","webpack:///./src/app/bottom/bottom.component.ts","webpack:///./src/app/classes/mortgagePlane.ts","webpack:///./src/app/data-form/data-form.component.css","webpack:///./src/app/data-form/data-form.component.html","webpack:///./src/app/data-form/data-form.component.ts","webpack:///./src/app/main-title/main-title.component.css","webpack:///./src/app/main-title/main-title.component.html","webpack:///./src/app/main-title/main-title.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/services/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Directive} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, Validator} from '@angular/forms';\n\n@Directive({\n    selector: '[appPercentageValidator]',\n    providers: [{provide: NG_VALIDATORS, useExisting: PercentageValidatorDirective, multi: true}]\n})\nexport class PercentageValidatorDirective implements Validator {\n\n    constructor() {\n    }\n\n    validate(control: AbstractControl) {\n        const elementValue = control.value;\n        if (elementValue < 0 || elementValue > 100) {\n            return {'cus_percentage': 'Ned to enter numbers between 0 to 100'};\n        }\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<app-main-title></app-main-title>\\n<app-data-form></app-data-form>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { BottomComponent } from './bottom/bottom.component';\nimport { MainTitleComponent } from './main-title/main-title.component';\nimport { DataFormComponent } from './data-form/data-form.component';\nimport { PercentageValidatorDirective } from './Directives/percentage-validator.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    BottomComponent,\n    MainTitleComponent,\n    DataFormComponent,\n    PercentageValidatorDirective\n  ],\n  imports: [\n    BrowserModule, FormsModule,HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  bottom works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bottom',\n  templateUrl: './bottom.component.html',\n  styleUrls: ['./bottom.component.css']\n})\nexport class BottomComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class MortgageData {\n    mortgageSum: number;\n    propValue: number;\n    netIncome: number;\n    plans: MortgagePlan[] = [];\n}\n\n\nexport class MortgagePlan {\n    id: number;\n    plan: string;\n    sum: number;\n    period: string;\n    interest: number;\n}\n\nexport const Plans: string[] = [\n    'פריים' ,\n    'קבועה לא צמודה' ,\n    'משתנה צמודה' ,\n    'משתנה לא צמודה' ,\n    'קבועה צמודה'\n]\n\nexport const Period: string[] = [\n    '0 - 10' ,\n    '11 - 15' ,\n    '16 - 20' ,\n    '21 - 30' ,\n]","module.exports = \"\\n.container {\\n    display: flex;\\n    flex-direction: column;\\n    width: 1000px;\\n}\\n\\n.mainData {\\n    display: flex;\\n    flex-direction: row;\\n    margin-right: auto;\\n    margin-left: auto;}\\n\\n.mainDataPlans {\\n    display: flex;\\n    flex-direction: row;\\n    margin-right: auto;\\n    margin-left: auto;\\n}\\n\\n.data {\\n    width: 450px;\\n    box-shadow: 2px 2px 20px hsl(0, 0%, 85%);\\n    margin-right: 10px;\\n    padding-top: 20px;\\n    padding-left: 20px;\\n    padding-right: 15px;\\n    padding-bottom: 5px;\\n    border-radius: 5px;\\n}\\n\\n.dataPlans{\\n    width: 450px;\\n    box-shadow: 2px 2px 20px hsl(0, 0%, 85%);\\n    margin-right: 10px;\\n    margin-top: 15px;\\n    padding-top: 20px;\\n    padding-left: 20px;\\n    padding-right: 15px;\\n    padding-bottom: 5px;\\n    border-radius: 5px;\\n}\\n\\n.sideTilteParent {\\n    background-color: lightblue;\\n    -webkit-writing-mode: vertical-rl;\\n        -ms-writing-mode: tb-rl;\\n            writing-mode: vertical-rl;\\n    text-orientation: mixed;\\n    text-align: center;\\n    width: 40px;\\n    box-shadow: 1px 1.5px 5px hsl(0, 0%, 85%);\\n    border-top-left-radius: 5px;\\n    border-top-right-radius: 5px;\\n}\\n\\n.sideTilteParentPlans {\\n    background-color: lightblue;\\n    -webkit-writing-mode: vertical-rl;\\n        -ms-writing-mode: tb-rl;\\n            writing-mode: vertical-rl;\\n    text-orientation: mixed;\\n    text-align: center;\\n    width: 40px;\\n    box-shadow: 1px 1.5px 6px hsl(0, 0%, 85%);\\n    margin: 0px;\\n}\\n\\n.innerContainer {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\nlabel, input {\\n    display: block;\\n}\\n\\n.btnAddPlan {\\n    float: left;\\n    margin-top: 20px;\\n    width: 120px;\\n    margin-left: 2%;\\n}\\n\\ninput {\\n    margin-bottom: 10px;\\n}\\n\\nselect {\\n    margin-bottom: 10px;\\n}\\n\\n.messageError {\\n    width: 100%;\\n    margin-top: .25rem;\\n    font-size: 80%;\\n    color: red;\\n}\\n\\n.buttons {\\n    -ms-grid-row-align: end;\\n        align-self: end;\\n    width: 100%;\\n    margin-bottom: 8px;\\n}\\n\\n.btnContinue {\\n    float: left;\\n    margin-top: 20px;\\n    width: 120px;\\n}\\n\\n.btnSub {\\n    margin-top: 15px;\\n    text-align: center;\\n}\\n\\n\\n\\n\"","module.exports = \"<form #form=\\\"ngForm\\\" (ngSubmit)=\\\"logForm()\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"mainData\\\">\\n            <div class=\\\"sideTilteParent\\\">\\n                <div class=\\\"sideTilte\\\">שלב 1 פרטים כללים</div>\\n            </div>\\n            <div class=\\\"data\\\">\\n                <div class=\\\"innerContainer\\\">\\n                    <div class=\\\"inputs\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"Mortgage\\\">סכום משכנתא</label>\\n                            <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"MortgageSum\\\" id=\\\"Mortgage\\\"\\n                                   [(ngModel)]=\\\"mortgageData.mortgageSum\\\"\\n                                   #MortgageSum=\\\"ngModel\\\" required pattern=\\\"^[0-9]*$\\\">\\n                            <div class=\\\"messageError\\\"\\n                                 *ngIf=\\\"MortgageSum.invalid && (MortgageSum.dirty || MortgageSum.touched)\\\">\\n                                <div *ngIf=\\\"MortgageSum?.errors.required\\\">\\n                                    יש להזין סכום משכנתא.\\n                                </div>\\n                                <div *ngIf=\\\"MortgageSum?.errors.pattern\\\">\\n                                    סכום המשכנתא חייב לכלול מספרים בלבד.\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"Prop\\\">שווי נכס</label>\\n                            <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"PropValue\\\"\\n                                   [(ngModel)]=\\\"mortgageData.propValue\\\"\\n                                   #PropValue=\\\"ngModel\\\" id=\\\"Prop\\\" required pattern=\\\"^[0-9]*$\\\">\\n                            <div class=\\\"messageError\\\"\\n                                 *ngIf=\\\"PropValue.invalid && (PropValue.dirty || PropValue.touched)\\\">\\n                                <div *ngIf=\\\"PropValue?.errors.required\\\">\\n                                    יש להזין שווי נכס.\\n                                </div>\\n                                <div *ngIf=\\\"PropValue?.errors.pattern\\\">\\n                                    שווי נכס חייב לכלול מספרים בלבד.\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"Net\\\">הכנסה נטו</label>\\n                            <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"NetIncome\\\"\\n                                   [(ngModel)]=\\\"mortgageData.netIncome\\\"\\n                                   #NetIncome=\\\"ngModel\\\" id=\\\"Net\\\" required pattern=\\\"^[0-9]*$\\\">\\n                            <div class=\\\"messageError\\\"\\n                                 *ngIf=\\\"NetIncome.invalid && (NetIncome.dirty || NetIncome.touched)\\\">\\n                                <div *ngIf=\\\"NetIncome?.errors.required\\\">\\n                                    יש להזין הכנסה נטו.\\n                                </div>\\n                                <div *ngIf=\\\"NetIncome?.errors.pattern\\\">\\n                                    הכנסה נטו חייבת לכלול מספרים בלבד.\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"buttons\\\">\\n                        <button type=\\\"button\\\" class=\\\"btnContinue btn btn-success btn-sm\\\"\\n                                [disabled]=\\\"(MortgageSum.invalid || PropValue.invalid || NetIncome.invalid)\\\"\\n                                (click)=\\\"btnAddNewPlan()\\\">המשך\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"mainDataPlans\\\" *ngFor=\\\"let mortgagePlan of mortgageData.plans; let i=index\\\">\\n            <div class=\\\"sideTilteParentPlans\\\">\\n                <div *ngIf=\\\"i===0\\\" class=\\\"sideTilte\\\">שלב 2 הרכב משכנתא</div>\\n            </div>\\n            <div class=\\\"dataPlans\\\">\\n                <div class=\\\"innerContainer\\\">\\n                    <div class=\\\"inputs\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label >בחר מסלול</label>\\n                            <select class=\\\"form-control\\\" name=\\\"mortgagePlan_{{i}}\\\" [(ngModel)]=\\\"mortgagePlan.plan\\\"\\n                                    #Plan=\\\"ngModel\\\"\\n                                    required>\\n                                <option *ngFor=\\\"let plan of MPlans\\\" [value]=\\\"plan\\\">{{plan}}</option>\\n                            </select>\\n                            <div class=\\\"messageError\\\"\\n                                 *ngIf=\\\"Plan.invalid && (Plan.dirty || Plan.touched)\\\">\\n                                יש צורך להזין מסלול.\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>סכום מסלול</label>\\n                            <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"planSum_{{i}}\\\"\\n                                   [(ngModel)]=\\\"mortgagePlan.sum\\\"\\n                                   #MPlanSum=\\\"ngModel\\\" required pattern=\\\"^[0-9]*$\\\">\\n                            <div class=\\\"messageError\\\"\\n                                 *ngIf=\\\"MPlanSum.invalid && (MPlanSum.dirty || MPlanSum.touched)\\\">\\n                                <div *ngIf=\\\"MPlanSum?.errors.required\\\">\\n                                    יש להזין סכום מסלול.\\n                                </div>\\n                                <div *ngIf=\\\"MPlanSum?.errors.pattern\\\">\\n                                    סכום מסלול לכלול מספרים בלבד.\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>תקופה בשנים</label>\\n                            <select class=\\\"form-control\\\" name=\\\"mortgagePeriod_{{i}}\\\" [(ngModel)]=\\\"mortgagePlan.period\\\"\\n                                    #MPeriod=\\\"ngModel\\\" required>\\n                                <option *ngFor=\\\"let p of Period\\\" [value]=\\\"p\\\">{{p}}</option>\\n                            </select>\\n                            <div class=\\\"messageError\\\"\\n                                 *ngIf=\\\"MPeriod.invalid && (MPeriod.dirty || MPeriod.touched)\\\">\\n                                יש צורך להזין תקופה בשנים.\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>ריבית שהתקבלה עבור המסלול הזה</label>\\n                            <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"interest_{{i}}\\\" min=\\\"0\\\" max=\\\"100\\\"\\n                                   [(ngModel)]=\\\"mortgagePlan.interest\\\" #MInterest=\\\"ngModel\\\" appPercentageValidator required pattern=\\\"^[+-]?([0-9]*[.])?[0-9]+$\\\">\\n                            <div class=\\\"messageError\\\"\\n                                 *ngIf=\\\"MInterest.invalid && (MInterest.dirty || MInterest.touched)\\\">\\n                                <div *ngIf=\\\"MInterest?.errors.required\\\">\\n                                    יש צורך להזין ריבית.\\n                                </div>\\n                                <div *ngIf=\\\"MInterest?.errors.pattern\\\">\\n                                    ריבית צריכה לכלול מספרים בלבד.\\n                                </div>\\n                                <div *ngIf=\\\"MInterest?.errors.cus_percentage\\\">\\n                                    יש להזין מספר בין 0 ל - 100\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"buttons\\\">\\n                        <button type=\\\"button\\\" class=\\\" btnContinue btn btn-success btn-sm\\\"\\n                                [disabled]=\\\"(Plan.invalid || MPlanSum.invalid || MPeriod.invalid || MInterest.invalid)\\\"\\n                                (click)=\\\"btnAddNewPlan()\\\">הוסף\\n                            מסלול נוסף +\\n                        </button>\\n                        <button type=\\\"button\\\" class=\\\"btnAddPlan btnContinue btn btn-success btn-sm\\\" (click)=\\\"btnRemovePlan(mortgagePlan)\\\">הסר מסלול</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"btnSub\\\">\\n        <button class=\\\"btn btn-warning\\\" [disabled]=\\\"form.invalid || mortgageData.plans.length === 0\\\"\\n                type=\\\"submit\\\">איך המשכנתא\\n            שלי\\n        </button>\\n    </div>\\n</form>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {MortgageData} from '../classes/mortgagePlane';\nimport {MortgagePlan} from '../classes/mortgagePlane';\nimport {Plans} from '../classes/mortgagePlane';\nimport {Period} from '../classes/mortgagePlane';\nimport {HttpService} from '../services/http.service';\n\n\n@Component({\n    selector: 'app-data-form',\n    templateUrl: './data-form.component.html',\n    styleUrls: ['./data-form.component.css']\n})\nexport class DataFormComponent implements OnInit {\n    MPlans: string[] = Plans;\n    Period: string[] = Period;\n    mortgageData: MortgageData;\n    minInterest: Number = 0;\n    maxInterest: Number = 100;\n\n    constructor(private http: HttpService) {\n        this.mortgageData = new MortgageData();\n    }\n\n    ngOnInit() {\n    }\n\n    logForm() {\n        this.http.addMortgage(this.mortgageData);\n    }\n\n    btnAddNewPlan() {\n        const plan = new MortgagePlan();\n        plan.id = this.mortgageData.plans.length + 1;\n        this.mortgageData.plans.push(plan);\n    }\n\n    btnRemovePlan(plan: MortgagePlan) {\n        const indx = this.mortgageData.plans.findIndex(rec => rec.id === plan.id);\n        if (indx > -1) {\n            this.mortgageData.plans.splice(indx, 1);\n        }\n    }\n}\n","module.exports = \".title{\\n    height: 250px;\\n    display: flex;\\n    flex-direction: row;\\n}\\n\\n.titleText{\\n    width: 50%;\\n    margin-right: 100px;\\n    margin-top: 30px;\\n}\\n\\n.titlePic{\\n    width: 50%;\\n    background: url('mortgage.png') no-repeat center center;\\n    height: 100%;\\n}\\n\\n.pTitle{\\n    font-weight: bold;\\n}\\n\\nh2 {\\n    color: blue;\\n}\"","module.exports = \"<div class=\\\"title\\\">\\n  <div class=\\\"titleText\\\">\\n    <h2>איך המשכנתא שלי?</h2>\\n    <p class=\\\"pTitle\\\">באנו לעשות לכם קצת סדר</p>\\n    <p>קיבלתם הצעה למשכנתא מהבנק?רוצים לדעת האם היא טובה</p>\\n    <p>או לא ביחס לאנשים דומים לכם?הגעתם למקום הנכון!</p>\\n  </div>\\n  <div class=\\\"titlePic\\\"></div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-title',\n  templateUrl: './main-title.component.html',\n  styleUrls: ['./main-title.component.css']\n})\nexport class MainTitleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".nav{\\n    height: 75px;\\n    background-color: green;\\n}\"","module.exports = \"<div class=\\\"nav\\\"></div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {MortgageData} from '../classes/mortgagePlane';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    addMortgage(data: MortgageData) {\n        this.http.post<MortgageData>('api/mortgage-plan', data).subscribe();\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}